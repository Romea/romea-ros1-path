#!/usr/bin/env python3
import argparse
import os
import sys
import rosbag

# local
from romea_path_tools.kml import Kml


def parse_args():
    parser = argparse.ArgumentParser(prog=os.path.basename(sys.argv[0]),
                                     description='Convert romea path file to KML')
    parser.add_argument('bagfile', type=str, help='path to a ROS bag file')
    parser.add_argument('kmlfile', type=str, help='path of the generated KML file')
    parser.add_argument('topic', type=str, help='topic containing msg of type nmea_msgs/Sentence')
    args = parser.parse_args()
    return args


def deg_from_degmin(val: str, nb_deg_digits):
    ''' Convert the latitude or longitude GGA field to degrees (float) '''
    return float(val[:nb_deg_digits]) + float(val[nb_deg_digits:]) / 60.


if __name__ == "__main__":
    args = parse_args()

    nb_measures = 0
    kml = Kml()
    bag = rosbag.Bag(args.bagfile)

    for t, msg, t in bag.read_messages(topics=[args.topic]):
        sentence = msg.sentence

        # extract lat lon alt from GGA sentence
        if sentence[3:6] == 'GGA':
            parts = sentence.split(',')
            if parts[2]:
                latitude = deg_from_degmin(parts[2], 2)
                longitude = deg_from_degmin(parts[4], 3)
                altitude = float(parts[9])
                kml.add_point(longitude, latitude, altitude)
                nb_measures += 1

    bag.close()
    kml.save(args.kmlfile)

    print(f'number of recorded measures: {nb_measures}')

    if nb_measures == 0:
        print(f"no message in topic '{args.topic}'")
        print('available topics:')
        types, topics = bag.get_type_and_topic_info()
        for topic in topics:
            print(f'  - {topic}')
